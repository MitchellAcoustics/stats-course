{
  "hash": "1efe0fa43ab0ad33caaa639b761b9929",
  "result": {
    "markdown": "---\ntitle: \"A Tool for Computing with Data\"\nformat:\n  revealjs:\n    author: \"STAT 20: Introduction to Probability and Statistics\"\n    height: 900\n    width: 1600\n    theme: ../../assets/slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: c\n    incremental: false\n    center: false\n    menu: false\n    highlight-style: github\n    progress: false\n    code-overflow: wrap\n    title-slide-attributes:\n      data-background-image: ../../assets/stat20-hex-bg.png\n      data-background-size: contain\n---\n\n\n## Agenda\n\n- Concept Questions: Intro to Computing with R\n- Reading Questions\n- R Workshop\n- *Break*\n- Practice Quiz\n\n# Concept Questions\n\n\n## Educated Guess 1\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/<name>`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- c(1, 2, 3, 4)\nsqrt(log(a))\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_3568b4f8\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\nTalking points\n- a is a vector of length four\n- log and sqrt are functions that will return vectors of length four\n- they're nested and will be evaluated from the inside out\n:::\n\n\n## Educated Guess 2\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/<name>`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 1 + 2\na + 1\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_07192ca1\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\n- a is a not a string, it's the name of an object that's a number\n- to overwrite a with `a + 1` requires re-assigning it to a: `a <- a + 1` (in some languages, `a + 1` would change the value of a)\n- `a <- a + 1` is a good time to mention that while `a = a + 1` works in R and they might see it online, its convention to use <- for many reasons including that mathematically the statement with = is confusing.\n:::\n\n## Educated Guess 3\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/<name>`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + \"one\"\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_8c0f30bf\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\n- \"one\" is a string with no link at all to the number 1\n- without that link, without two objects that are recognized for their numerical value, `+` doesn't work.\n:::\n\n## Educated Guess 4\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/<name>`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- c(1, 3.14, \"seven\")\nclass(a)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_d5eb213d\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\n- the definition of a vector requires every element to be of the same type\n- based on their reading, there are three classes that they're familiar with: numeric, factor, and character\n- there's no way to translate \"seven\" into 7, so instead 1 and 3.14 must be translated into strings\n- they will likely encounter this when looking at a data set in R (or other languages) and finding that vectors with what looked like numbers are stored as strings. This usually happens because there's a single errant character that the language doesn't know how to parse as a number.\n:::\n\n# Reading Questions\n\n\n\n",
    "supporting": [
      "slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"slides_files/libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"slides_files/libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}