{
  "hash": "6e39a74b1bd25e4d0313a01f31fa2b45",
  "result": {
    "markdown": "---\ntitle: \"A Tool for Computing with Data\"\nformat:\n  revealjs:\n    author: \"STAT 20: Introduction to Probability and Statistics\"\n    height: 900\n    width: 1600\n    theme: ../../assets/slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: c\n    incremental: false\n    center: false\n    menu: false\n    highlight-style: github\n    progress: false\n    code-overflow: wrap\n    title-slide-attributes:\n      data-background-image: ../../assets/stat20-hex-bg.png\n      data-background-size: contain\n---\n\n\n## Agenda\n\n- Concept Questions: Intro to Computing with R\n- Reading Questions\n- R Workshop\n- *Break*\n- Practice Quiz\n\n# Concept Questions\n\n## Educated Guess 1\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/<name>`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + \"one\"\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_a595f591\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\n- \"one\" is a string with no link at all to the number 1\n- without that link, without two objects that are recognized for their numerical value, `+` doesn't work.\n:::\n\n## Educated Guess 2\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/<name>`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- c(1, 2, 3, 4)\nsqrt(log(a))\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_cc657b15\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\nTalking points\n- a is a vector of length four\n- log and sqrt are functions that will return vectors of length four\n- they're nested and will be evaluated from the inside out\n:::\n\n\n## Educated Guess 3\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/<name>`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 1 + 2\na + 1\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_bffc4d38\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\n- a is a not a string, it's the name of an object that's a number\n- to overwrite a with `a + 1` requires re-assigning it to a: `a <- a + 1` (in some languages, `a + 1` would change the value of a)\n- `a <- a + 1` is a good time to mention that while `a = a + 1` works in R and they might see it online, its convention to use <- for many reasons including that mathematically the statement with = is confusing.\n:::\n\n## Educated Guess 4\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/<name>`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- c(1, 3.14, \"seven\")\nclass(a)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_ab3c77b1\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\n- the definition of a vector requires every element to be of the same type\n- based on their reading, there are three classes that they're familiar with: numeric, factor, and character\n- there's no way to translate \"seven\" into 7, so instead 1 and 3.14 must be translated into strings\n- they will likely encounter this when looking at a data set in R (or other languages) and finding that vectors with what looked like numbers are stored as strings. This usually happens because there's a single errant character that the language doesn't know how to parse as a number.\n:::\n\n# Reading Questions\n\n# R Workshop\n\n## Components of RStudio\n\n1. Console\n\n2. Environment\n\n3. Editor\n\n4. File Directory\n\n> Now we are going to switch over to RStudio to understand these 4 components a bit better.\n\n## Components of RStudio\n\n1. **Console**: Where the live R session lives. Type commands into the prompt `>` and press enter/return to run them. The Console is in the lower-left pane.\n\n2. **Environment**: The space that keeps track of all of the data and objects that you have created or loaded and have access to. Found in the upper right pane.\n\n3. **Editor**: Used to compose and edit text (.qmd files) and R code (.r files). Found in the upper left pane.\n\n4. **File Directory**: Used to navigate between your files/folders on your Rstudio account. Can move, copy, rename, delete, etc. Found in the lower right pane.\n\n\n## R as a calculator\n\nR allows all of the standard arithmetic operations.\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n**Addition**\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n\n**Subtraction**\n\n::: {.cell}\n\n```{.r .cell-code}\n1 - 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -1\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n**Multiplication**\n\n::: {.cell}\n\n```{.r .cell-code}\n1 * 2 \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\n**Division**\n\n::: {.cell}\n\n```{.r .cell-code}\n1 / 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5\n```\n:::\n:::\n\n:::\n\n::::\n\n\n## R as a calculator, cont.\n\nR allows all of the standard arithmetic operations.\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n**Exponents**\n\n::: {.cell}\n\n```{.r .cell-code}\n2 ^ 3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n**Parentheses for Order of Ops.**\n\n::: {.cell}\n\n```{.r .cell-code}\n2 ^ 3 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n2 ^ (3 + 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n:::\n\n:::\n\n::::\n\n## Your turn\n\n:::{.poll}\nWhat is three times one point two raised to the quantity thirteen divided six?\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_7256324f\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:1.5em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n## Object assignment\n\nYou can create/save objects using the assignment operator `<-` . This is the equivalent of `=` in other programming languages. \n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_fav_num <- 11\n```\n:::\n\n\n. . .\n\nIn order to be recognized as a valid object name, you have to follow certain conventions; namely, the object name should begin with a letter.\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> good names </th>\n   <th style=\"text-align:left;\"> names that cause errors </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> a </td>\n   <td style=\"text-align:left;\"> 1trial </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> b </td>\n   <td style=\"text-align:left;\"> $ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> FOO </td>\n   <td style=\"text-align:left;\"> ^mean </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> my_var </td>\n   <td style=\"text-align:left;\"> my var </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Functions on vectors\n\nA *vector* is the simplest structure used in R to store data. It can be created using the function `c()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_vector <- c(1, 3, 4)\nmy_vector\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 3 4\n```\n:::\n:::\n\n\n. . .\n\nA *function* operates on an R object and produces output. R has many of the mathematical functions that you would expect.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(my_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8\n```\n:::\n:::\n\n\n\n## Your Turn\n\n:::{.poll}\n1. Create a vector named `vec` with the even integers between 1 and 10 as well as the number 99 (six elements total).\n\n2. Find the sum of that vector.\n\n3. Find the max of that vector.\n\n4. Take the mean of that vector and round it to the nearest integer.\n:::\n\nThese should all be solved with R code. If you don't know the name of a function to use, with hazard a guess by looking for a help file (e.g. `?sum`) or google it.\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_95d9813b\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:1.5em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n##\n\nDemo of:\n\n1. Creating an R script\n2. Saving it\n3. Typing in code that answers previous question\n4. How to run code from a script\n  - Put cursor on line and click \"Run\"\n  - Put cursor on line and type command+return.\n  - Copy and paste to the console.\n  \n:::{.notes}\nvec <- c(2, 4, 6, 8, 10, 99)\nsum(vec)\nmax(vec)\n?round\nround(mean(vec))\n:::\n\n\n## Loading Packages\n\nR has a vast ecosystem of packages that extend the language. Any installed package can be loaded with the `library()` function.\n\n. . .\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n![](images/hexes.png)\n:::\n\n::: {.column width=\"50%\" .fragment}\n![](images/tidyverse-hex.png){width=\"350px\" fig-align=center}\n\nWe will use the package *tidyverse*, which contains a set of powerful science packages.\n\n\n::: {.cell}\n\n:::\n\n\n:::\n\n::::\n\n\n## Building a data frame\n\nYou can combine vectors into a data frame using the `tibble()` function from the `tidyverse` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbill_depth_mm <- c(15.0, 17.1, 18.7, 18.9)\nbill_length_mm <- c(47.5, 40.2, 39.0, 35.3)\nspecies <- c(\"Gentoo\", \"Adelie\", \"Adelie\", \"Adelie\")\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\npenguins_df <- tibble(bill_depth_mm, bill_length_mm, species)\npenguins_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  bill_depth_mm bill_length_mm species\n          <dbl>          <dbl> <chr>  \n1          15             47.5 Gentoo \n2          17.1           40.2 Adelie \n3          18.7           39   Adelie \n4          18.9           35.3 Adelie \n```\n:::\n:::\n\n\n\n# Your Turn\n\n:::{.poll}\n1. Create an .r script, name it, and save it.\n\n2. Create three vectors, `name`, `favorite_color`, and `favorite_number` that contain observations on those variables from 5 people in this class.\n\n3. Combine them into a data frame called `my_classmates`.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_21cfa043\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:1.5em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">06</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n## Loading data from a package\n\nMost data you will *not* be creating by hand. You will either be\n\n1. Loading it in from a separate file.\n\n2. Loading it from within an R package.\n\n. . .\n\nTo load data from a package,\n\n1. load that package with `library()`\n2. load the data set with `data()`\n\n\n## Functions on data frames\n\nThe `tidyverse` package contains several functions used to manipulate data frames: \n\n- `select()` : subset columns \n\n- `arrange()` : sort rows \n\n- `mutate()` : create a new column from existing column(s)\n\n##\n\nDemo `select()`, `arrange()`, and `mutate()` on \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\ndata(penguins)\n```\n:::\n\n\nDon't use the pipe syntax.\n\n\n## Your turn\n\nThere is a built-in data set to R called `mtcars` that has information on cars that appeared in Motor Trend magazine. It's already loaded and can be accessed as `mtcars`.\n\n:::{.poll}\n1. Create a slimmer data frame that only contains the columns `hp` and `wt` and save it to `mtcars_slim`.\n\n2. Create a new column called `power_to_weight` that is the ratio of `hp` to `wt`. Save the three-column data frame back over `mtcars_slim`.\n\n3. Sort the data frame in descending order by the power-to-weight ratio.\n:::\n\nHint: look up help files!\n\n\n",
    "supporting": [
      "slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"slides_files/libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"slides_files/libs/countdown-0.4.0/countdown.js\"></script>\n<script src=\"slides_files/libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"slides_files/libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}