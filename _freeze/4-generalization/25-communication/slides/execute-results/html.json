{
  "hash": "a92285a1090a1b0d6ef6857b483482cc",
  "result": {
    "markdown": "---\ntitle: \"Effective communication\"\nformat:\n  revealjs:\n    author: \"STAT 20: Introduction to Probability and Statistics\"\n    height: 900\n    width: 1600\n    theme: ../../assets/slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: c\n    incremental: false\n    center: false\n    menu: false\n    highlight-style: github\n    progress: false\n    code-overflow: wrap\n    title-slide-attributes:\n      data-background-image: ../../assets/stat20-hex-bg.png\n      data-background-size: contain\nexecute: \n  echo: false\n---\n\n\n## Agenda\n\n-  Concept Questions\n-  Communication Critique\n-  Practice Problems\n\n# Concept Questions\n\n## TikTok algorithm\n\n::: poll\nThe TikTok recommendation algorithm is an example of which principle of communication?\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_f047b3cc\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::notes\nAdapt to your audience! The algorithm learns what you like and shows you more.\n:::\n\n## Which formatting is the most readable?\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_25e5be94\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n::: notes\nThere is no right or wrong answer here. Personally I find snake case to be the most readable.\n\nIn programming we often avoid the `-` and `.` in variable names because they take special names in certain languages. In R these are ok to use in variable names.\n:::\n\n\n## Not an example of hierarchy\n\n::: poll\nWhich of the following is NOT an example of hierarchical organization.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_f4561089\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n::: notes\nA: words in a sentence\n\nThese must be read sequentially to make sense.\n:::\n\n\n\n# Communication Critique\n\n## Critique\n\n- Discuss how the the principles and strategies for effective communication are or are not used.\n\n- Are there ways to improve how the content was communicated?\n\n::: notes\nPick your favorite website, app, data visualization, etc.\n:::\n\n\n# Practice Problems\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}