{
  "hash": "4f57485fd03ac0b53a296c91908b41a0",
  "result": {
    "markdown": "---\ntitle: \"Experiments\"\nformat:\n  revealjs:\n    author: \"STAT 20: Introduction to Probability and Statistics\"\n    height: 900\n    width: 1600\n    theme: ../../assets/slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: c\n    incremental: false\n    center: false\n    menu: false\n    highlight-style: github\n    progress: false\n    code-overflow: wrap\n    title-slide-attributes:\n      data-background-image: ../../assets/stat20-hex-bg.png\n      data-background-size: contain\nexecute: \n  echo: false\n---\n\n\n## Agenda\n\n- A Matter of Taste II\n- Principles of Experimental Design\n- Final Words\n\n# A Matter of Taste II\n\nPlease:\n\n1. Conduct your experiment\n2. Record your data\n3. Complete and submit PS 9 as a group (see notes page for today for link).\n\nIf you don't finish in the allotted time, finish up PS 9 after class.\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_589b7367\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">60</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n# Principles of Experimental Design\n\n## The Essential Question of Our Time\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/la-croix.png){fig-align='center' width=1131}\n:::\n:::\n\n\n::: poll\nWhich is the best flavor?\n:::\n\n:::notes\nThis purely for fun. Some people have strong opinions about this.\n:::\n\n##\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/la-croix.png){fig-align='center' width=1131}\n:::\n:::\n\n\n::: poll\nCould your taster distinguish between flavors?\n\nA. Yes, and it was statistically significant (p < .05)\nB. Yes, but it was not statistically significant (p > .05)\nB. No.\nC. We tested a different claim\n:::\n\n:::\nThe goal of this question is to allow all groups to, in brief, share their results with the class. It also opens up the conversation about how there were many different ways to carry out this experiment. Two groups might have come to different conclusions because their tasters really had different abilities, or because their claims and experiments were slightly different, or just due to random chance.\n:::\n\n## {background-image=\"images/student-example-front.png\" background-size=\"contain\"}\n\n:::notes\nInsert in these slides screencaps \n:::\n\n## {background-image=\"images/student-example-back.png\" background-size=\"contain\"}\n\n",
    "supporting": [
      "slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}