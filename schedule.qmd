---
title: Schedule
toc: false
sidebar: false
---

<!-- **Class Sessions**: 2 hr blocks on Wednesday and Friday\ -->
<!-- **Workshop**: 1 hr Monday\ -->
<!-- **Reading Questions due**: 11:59 pm Tuesday and Thursday on Gradescope\ -->
<!-- **Labs and PS due**: Tuesday morning 10 am on Gradescope\ -->
<!-- **Homework Party**: Thursday 4-6 pm in Evans 342\ -->
<!-- **Final Exam**: Thursday 5/11/23 in person from 11:30am-2:30pm -->

:::{.panel-tabset}

## Schedule of Topics

```{r}
#| echo: false
#| results: asis

# read in course settings
course_settings <- yaml::read_yaml("_course-settings.yml")

# collect list of all materials
materials_list <- purrr::map(course_settings$schedule, "materials") |>
  purrr::list_flatten()

# get set of all dates
sched_dates <- purrr::map_chr(materials_list, "date") |>
  lubridate::mdy()

# create a vector all all dates (M-F) to appear in calendar
library(lubridate)

first_day <- min(sched_dates)
first_mon <- first_day - wday(first_day) + 2
last_day <- max(sched_dates)
last_fri <- last_day + (6 - wday(last_day))

date_seq <- 0:(last_fri - first_mon)
cal_dates <- first_mon + 
  date_seq[-c(seq(6, as.integer(last_fri - first_mon), 7),
              seq(7, as.integer(last_fri - first_mon), 7))]# exclude weekends

# create (nested) list of all titles to appear on those dates
return_title_if_match <- function(x, d) {
  if (mdy(x$date) == d) {
    if(exists("title", where = x)) {
      title <- x$title
    } else {
      title <- rmarkdown::yaml_front_matter(x$href)$title
    }
    if(exists("href", where = x)) {
      if(stringr::str_extract(x$href, "[^/]+$") == "notes.qmd") {
        title <- glue::glue("<a href='{x$href}'><span class='btn bg-primary'>{title}</span></a>")
      } else if(stringr::str_extract(x$href, "[^/]+$") == "lab.qmd") {
        title <- glue::glue("<a href='{x$href}'><span class='btn bg-secondary'>{title}</span></a>")
      } else {
        title <- glue::glue("<a href='{x$href}'><span class='btn'>{title}</span></a>")
        }
      } else {
      title <- glue::glue("<span class='btn'>{title}</span>")
    }
    title
  }
}

return_titles <- function(x) {
  purrr::map(materials_list, return_title_if_match, x) |>
  unlist()
}

cal_titles <- purrr::map(cal_dates, return_titles)

# form calendar tibble

## interleave two lists
# cal_dates <- as.list(cal_dates)
idx <- order(c(seq_along(cal_dates), seq_along(cal_titles)))
d_and_t <- c(lubridate::mday(cal_dates), cal_titles)[idx]

mon_idx <- sort(c(seq(1, length(d_and_t), 10),
                  seq(2, length(d_and_t), 10)))
tue_idx <- sort(c(seq(3, length(d_and_t), 10),
                  seq(4, length(d_and_t), 10)))
wed_idx <- sort(c(seq(5, length(d_and_t), 10),
                  seq(6, length(d_and_t), 10)))
thu_idx <- sort(c(seq(7, length(d_and_t), 10),
                  seq(8, length(d_and_t), 10)))
fri_idx <- sort(c(seq(9, length(d_and_t), 10),
                  seq(10, length(d_and_t), 10)))

cal_df <- tibble::tibble(MON = d_and_t[mon_idx],
                         TUE = d_and_t[tue_idx],
                         WED = d_and_t[wed_idx],
                         THU = d_and_t[thu_idx],
                         FRI = d_and_t[fri_idx])

# cal_df[2, 5][[1]][[1]] <- "<a href='https://www.w3schools.com/tags/tag_a.asp'><span class='btn bg-primary'>The Taxonomy of Data</span></a>"

library(gt)

make_cal <- function(cal_df, from_week, to_week, mo_label) {
  cal_df2 <- cal_df |>
    dplyr::slice(from_week:to_week)
  is_date <- rep(c(TRUE, FALSE), nrow(cal_df2) / 2)
  gt(cal_df2) |>
    tab_header(title = md(paste0("### ", mo_label))) |>
    cols_align(align = "center") |>
    cols_width(everything() ~ pct(20)) |>
    tab_style( # style col names
      style = cell_text(size = pct(75)),
      locations = cells_column_labels()) |>
    tab_style( # style rows with dates
      style = cell_borders(sides = c("bottom"),
                           style = NULL),
      locations = cells_body(rows = is_date)) |> 
    tab_style( # style columns with vertical lines
      style = cell_borders(sides = c("left", "right"),
                           color = "--quarto-border-color"),
      locations = cells_body()) |>
    tab_style( # remove top border
      style = cell_borders(sides = "top",
                           style = NULL),
      locations = cells_column_labels()) |>
    opt_horizontal_padding(scale = 2) |>
    opt_vertical_padding(scale = 2) |>
    tab_options(table.border.top.style = "none") |>
    fmt_url(columns = 3,
            rows = 2,
            as_button = TRUE) |>
    fmt_markdown(columns = c(3, 5))
}

## make by-month calendars to cover the schedule ##

# months of every item on calendar
cal_months <- month(cal_dates, label = TRUE, abbr = FALSE)
unique_mo <- unique(cal_months)

for (i in seq_along(unique_mo)) {
  mo_label <- unique_mo[i]
  mo_span <- range(which(cal_months == mo_label))
  
  make_cal(cal_df,
           from_week = ceiling(mo_span[1]/5) * 2 - 1, 
           to_week = ceiling(mo_span[2]/5) * 2,
           mo_label = mo_label) |>
    htmltools::tagList() |>
    print()
}


# blank out materials from other months (maybe form cal_df after month is specified)
# add links
```


```{r}
#| echo: false
#| message: false
#| eval: false

# 1. Reads in the course schedule from csv downloaded from 
# an associated google sheet: https://docs.google.com/spreadsheets/d/1PWuMkcQX2PUd84zDUmBe2tRI2Lfsam1-435JQ1A2GAE/edit#gid=0
# 2. Wrangles the dataframe to 
#   - Filters rows and selects cols of interest
#   - 

library(tidyverse)
#library(knitr)
library(kableExtra)
options(kableExtra.html.bsTable = TRUE)
#library(formattable)
library(googlesheets4)
gs4_deauth()

a <- read_sheet("https://docs.google.com/spreadsheets/d/1PXyG38cf3ARqvcEgZRhRIIWDRPCmDIvk6jPQnB1Nvaw/edit#gid=1914576809")

a %>%
  filter(date <= "2022-10-10",
         day != "Tues") %>%
  select(date, day, unit, topic) %>%
  kbl(escape = FALSE) %>%
  kable_styling(bootstrap_options = c("hover", "striped"))


# # Clean the data frame
# sched <- sched_raw %>%
#   replace_na(list("Week" = " ")) # Make empty fields empty
# 
# # Replace some values with html links
# # TODO: automate the stripping of empty links using
# # `Weekly Work` = if_else(grepl("<a href=\"NA", `Weekly Work`))
# sched <- sched %>%
#   mutate(`Topic` = cell_spec(`Topic`,
#                                    "html",
#                                    link = `Topic Link`,
#                                    new_tab = FALSE),
#          `Reading` = cell_spec(`Reading`,
#                            "html",
#                            link = `Reading Link`,
#                            new_tab = TRUE),
#          `Weekly Work` = cell_spec(`Weekly Work`,
#                                    "html",
#                                    link = `Weekly Work Link`,
#                                    new_tab = FALSE)) %>%
#   select(Week, Day, Date, Topic, Reading, `Weekly Work`)
# 
# # Create html table
# sched %>%
#   kbl(escape = FALSE) %>%
#   kable_styling(bootstrap_options = c("hover", "striped"))
# 

# sched %>%
#   mutate(Assignments = 
#            cell_spec(Assignments, 
#                      color = "white", 
#                      bold = T,
#                      background = 
#                        spec_color(1:6,
#                                   end = 0.9,
#                                   option = "A",
#                                   direction = -1))) %>%

```

<!-- ![](assets/schedule-sketch-3.png) -->

## Office Hours

Please stop by office hours and introduce yourself! Office hours are useful for one-on-one help on assignments, discussion of topics discussed in the reading, or broader questions about statistics and data science. You're welcome to visit the office hours of any of the tutors, not just those affiliated with your section.

#### Instructors

**Andrew Bray:** Fri 10-12 in Evans 415, Tue 3-4pm on Zoom (see Ed for link) \
**Silas Gifford:** Thu 11-12:30 in Evans 418, Mon 2-3:30 in Evans 426 \
**Jeremy Sanchez:** Tue 12-2, Wed 11-12 in Evans 323 \
**Shobhana Murali Stoyanov:** Wed 2:30-4:30, Thurs 2:30-3:30 Evans 333

#### Homework Party

Thu 4-6 pm in Evans 340

Homework Party is a place to come to work on your homework with other students in Stat 20. It's a fun environment to meet new people, work together, and get guidance from a group of tutors who will be on hand to help.

#### Tutors

Note: all office hours are held on the 3rd and 4th floor of Evans Hall. If you don't see a room number next to a tutors' name, check back soon, we'll be updating those as rooms are assigned.

<center>
<iframe src="https://docs.google.com/spreadsheets/d/e/2PACX-1vTsVhL9am4kVTVMgdy5NK5bhTvkFp3I8YLKWkFDbXqv3VOMmYSPimxvDyHrTD7j7dzBCFEUwr-MQFeG/pubhtml?gid=948670169&amp;single=true&amp;widget=true&amp;headers=false" width="750" height="720"></iframe>
</center>

:::
