---
title: "Sampling Distributions"
format:
  revealjs:
    author: "STAT 20: Introduction to Probability and Statistics"
    height: 900
    width: 1600
    theme: ../../assets/slides.scss
    multiplex: false
    transition: fade
    slide-number: c
    incremental: false
    center: false
    menu: false
    highlight-style: github
    progress: false
    code-overflow: wrap
    title-slide-attributes:
      data-background-image: ../../assets/stat20-hex-bg.png
      data-background-size: contain
---

## Agenda

1. Concept Questions
2. PS Analog Worksheet
3. Lab 5.1: People's Park


##

```{r}
countdown::countdown(1, bottom = 0)
```



:::{.poll}
The top plots are population distributions; the bottom two are sampling distributions of the sample mean. Match numbers to letters.
:::

```{r}
#| fig-width: 8
#| fig-height: 5
#| fig-align: center
library(tidyverse)
set.seed(123123)
family_pop1 <- rep(c(1,2,3,4), times = c(20,40,25,15)) 
family_pop2 <- rep(c(1,2,3,4), times = c(15,20,35,30))

pop_plot1 <- ggplot(data.frame(family_pop1), aes(x=family_pop1)) +
  geom_bar(fill = "gray55", width = 0.98) + 
  xlab("") + 
  annotate("text", x=3.8, y = 35, label="(1)", color = "black", size=5) +
  theme_gray(base_size = 16)

pop_plot2 <- ggplot(data.frame(family_pop2), aes(x=family_pop2)) +
  geom_bar(fill = "gray55", width = 0.98) + 
  xlab("") + 
  annotate("text", x=1, y = 30, label="(2)", color = "black", size=5) +
  theme_gray(base_size = 16)

family_sample1 <- replicate(500, 
                        mean(sample(family_pop1, 200, replace = TRUE)))

sample_plot1 <- ggplot(data.frame(family_sample1), aes(x=family_sample1)) +
  geom_histogram(fill = "gray", color = "black",
                 bins = 25) + xlab("") +
  annotate("text", x=2.2, y = 42, label="(B)", color = "black", size=5) +
  theme_gray(base_size = 16)

family_sample2 <- replicate(500, 
                            mean(sample(family_pop2, 200, replace = TRUE)))

sample_plot2 <- ggplot(data.frame(family_sample2), aes(x=family_sample2)) +
  geom_histogram(fill = "gray", color = "black",
                 bins = 25) + xlab("") +
  annotate("text", x=3, y = 60, label="(A)", color = "black", size=5) +
  theme_gray(base_size = 16)

library(patchwork)

(pop_plot1 + pop_plot2) / (sample_plot2 + sample_plot1)
```

:::{.notes}
Many of them will guess, and it will be 
good to make them compute the box average
:::

##

Say we want estimate the size of an average class at Berkeley. 

:::{.poll}
Should we ask the administration?  Or should we survey the students, ask them how large their classes are, and take the average of these values? Does it matter?
:::

```{r}
countdown::countdown(3, bottom = 0)
```


##

#### Scenario 1: Calling on the front row

```{r}
library(tidyverse)
pop_eager <- data.frame(year = factor(rep(c(1, 2, 3, 4), 
                                   times = c(245, 210, 47, 25))),
                        eagerness = rep(c(10, 6, 3, 1), 
                                        times = c(245, 210, 47, 25)))
set.seed(34)
pop_eager <- pop_eager %>%
  slice_sample(n = nrow(pop_eager)) 

library(infer)
samp_1 <- pop_eager %>%
  slice_sample(n = 18,
                   replace = FALSE,
                   weight_by = eagerness) 

many_samps <- samp_1 %>%
  mutate(replicate = 1)

set.seed(40211)

for (i in 2:500) {
  many_samps <- pop_eager %>%
    slice_sample(n = 18,
                 replace = FALSE,
                 weight_by = eagerness) %>%
    mutate(replicate = i ) %>%
    bind_rows(many_samps)
}

p1 <- many_samps %>%
  filter(replicate == 1) %>%
  ggplot(aes(x = year)) + 
  geom_bar() +
  labs(title = "Sample 1")

p2 <- many_samps %>%
  filter(replicate == 2) %>%
  ggplot(aes(x = year)) + 
  geom_bar() +
  labs(title = "Sample 2")

p3 <- many_samps %>%
  filter(replicate == 3) %>%
  ggplot(aes(x = year)) + 
  geom_bar() +
  labs(title = "Sample 3")

many_xbars <- many_samps %>%
  group_by(replicate) %>%
  summarize(xbar = mean(as.numeric(year)))

p4 <- many_xbars %>%
  ggplot(aes(x = xbar)) +
  geom_bar(fill = "purple") +
  lims(x = c(0, 4)) +
  labs(title = "Sampling Distribution")

library(patchwork)

p_patched <- (p1 + p2 + p3) / p4
p_patched
```

##

```{r}
#| fig-height: 2
#| fig-width: 6
#| fig-align: center

p4
```

:::poll
How would the sampling distribution change if instead of calling on the front row, the Prof. put all 527 names on tickets in a box, mixed them up, then drew 18 names without replacement?
:::

```{r}
countdown::countdown(1, bottom = 0)
```

##

#### Scenario 2: Drawing names from a box

```{r}
pop_equal <- pop_eager %>%
  mutate(eagerness = 1)

samp_1 <- pop_equal %>%
  slice_sample(n = 18,
                   replace = FALSE,
                   weight_by = eagerness)

many_samps <- samp_1 %>%
  mutate(replicate = 1)

for (i in 2:500) {
  many_samps <- pop_equal %>%
    slice_sample(n = 18,
                 replace = FALSE,
                 weight_by = eagerness) %>%
    mutate(replicate = i ) %>%
    bind_rows(many_samps)
}

p1 <- many_samps %>%
  filter(replicate == 1) %>%
  ggplot(aes(x = year)) +
  geom_bar() +
  labs(title = "Sample 1")

p2 <- many_samps %>%
  filter(replicate == 2) %>%
  ggplot(aes(x = year)) +
  geom_bar() +
  labs(title = "Sample 2")

p3 <- many_samps %>%
  filter(replicate == 3) %>%
  ggplot(aes(x = year)) +
  geom_bar() +
  labs(title = "Sample 3")

many_xbars <- many_samps %>%
  group_by(replicate) %>%
  summarize(xbar = mean(as.numeric(year)))

p4 <- many_xbars %>%
  ggplot(aes(x = xbar)) +
  geom_bar(fill = "purple") +
  lims(x = c(0, 4)) +
  labs(title = "Sampling Distribution")

(p1 + p2 + p3) / p4
```